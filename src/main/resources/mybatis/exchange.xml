<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dev.mvc.exchange.ExchangeDAOInter">
  <!-- 등록한 레코드 갯수 1 리턴 호출됨 -->
  <insert id="create" parameterType="dev.mvc.exchange.ExchangeVO">
    INSERT INTO exchange(exchangeno,  classifyno, name, price, 
                                     file1, file1saved, thumb1, size1, recent)
    VALUES(exchange_seq.nextval, #{memberno}, #{classifyno}, #{name}, #{price}, #{passwd}, #{word},
                #{file1}, #{file1saved}, #{thumb1}, #{size1}, sysdate)
  </insert>


  <select id="list_all" resultType="dev.mvc.exchange.ExchangeVO">
    SELECT exchangeno,  classifyno, name, price,    recent,
               file1, file1saved, thumb1, size1
      FROM exchange
    ORDER BY exchangeno DESC
  </select>
  
  <!-- 특정 카테고리의 등록된 글목록 -->
  <select id="list_by_classifyno" resultType="dev.mvc.exchange.ExchangeVO" parameterType="int">
    SELECT exchangeno,  classifyno, name, price,  recent,
              LOWER(file1) as file1, file1saved, thumb1, size1
    FROM exchange 
    WHERE classifyno = #{classifyno}
    ORDER BY exchangeno DESC
  </select> 
  
  <!-- 일반적인 조회 -->
  <select id="read" resultType="dev.mvc.exchange.ExchangeVO" parameterType="int">
    SELECT *
    FROM exchange
    WHERE exchangeno = #{exchangeno}
  </select>
  

  <select id="reading" resultType="dev.mvc.exchange.ExchangeVO" parameterType="int">
 SELECT * FROM(   
        SELECT * 
    FROM (
        SELECT * 
        FROM exchange
        ORDER BY recent DESC
    ) 
    WHERE ROWNUM &lt;= 3
    ORDER BY exchangeno)
    WHERE classifyno =#{classifyno}
  </select>
  
  <!-- 일반적인 조회 -->
  <select id="genre" resultType="dev.mvc.exchange.ExchangeVO">
    SELECT *
    FROM genre 
    ORDER BY seqno ASC
  </select>
  

  <!-- 카테고리별 검색 목록 -->
  <select id="list_by_classifyno_search" resultType="dev.mvc.exchange.ExchangeVO" parameterType="HashMap">
    SELECT exchangeno,  classifyno, name, price,   recent,
            file1, file1saved, thumb1, size1, map
    FROM exchange
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE classifyno=#{classifyno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE classifyno=#{classifyno} AND (UPPER(name) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(price) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
    ORDER BY exchangeno DESC   
  </select>
   
  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="list_by_classifyno_search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM exchange
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE classifyno=#{classifyno}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE classifyno=#{classifyno} AND (UPPER(name) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(price) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
  </select>   

  <!-- 카테고리별 검색 + 페이징 목록 -->
  <select id="list_by_classifyno_search_paging" resultType="dev.mvc.exchange.ExchangeVO" parameterType="HashMap">
   SELECT exchangeno,  classifyno, name, price,  recent, file1, file1saved, thumb1, size1, map,  r
   FROM (
              SELECT exchangeno,  classifyno, name, price,   recent, file1, file1saved, thumb1, size1, map,  rownum as r
              FROM (
                        SELECT exchangeno,  classifyno, name, price,  recent, file1, file1saved, thumb1, size1, map
                        FROM exchange
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                            WHERE classifyno=#{classifyno}
                          </when>
                          <otherwise>
                            WHERE classifyno=#{classifyno} AND (UPPER(name) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(price) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
                          </otherwise>
                        </choose>
                        ORDER BY exchangeno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!-- 1 page: WHERE r >= 1 AND r <= 10; 
          2 page: WHERE r >= 11 AND r <= 20;
          3 page: WHERE r >= 21 AND r <= 30; -->
  </select>
  


  <!-- 글 삭제 -->
  <delete id="delete" parameterType="int">
    DELETE FROM exchange
    WHERE exchangeno=#{exchangeno}
  </delete>
  <!-- FK classifyno 컬럼에 대응하는 필수 SQL -->
  <!-- 특정 카테고리에 속한 레코드 갯수를 리턴 -->
  <select id="count_by_classifyno" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt 
    FROM exchange 
    WHERE classifyno=#{classifyno}
  </select>
  
  <!-- 특정 카테고리에 속한 모든 레코드 삭제 -->
  <delete id="delete_by_classifyno" parameterType="int">
    DELETE FROM exchange
    WHERE classifyno=#{classifyno}
  </delete>

  <!-- FK memberno 컬럼에 대응하는 필수 SQL -->
  <!-- 특정 카테고리에 속한 레코드 갯수를 리턴 -->
  <select id="count_by_memberno" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt 
    FROM exchange 
    WHERE memberno=#{memberno}
  </select>
  
  <!-- 특정 카테고리에 속한 모든 레코드 삭제 -->
  <delete id="delete_by_memberno" parameterType="int">
    DELETE FROM exchange
    WHERE memberno=#{memberno}
  </delete>

                    
</mapper> 